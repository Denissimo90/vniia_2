<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>launcher-webapp</artifactId>
  <groupId>net.vniia</groupId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <properties>
    <environment>dev</environment>
    <!-- This is NOT a java project, therefore we do not compile anything -->
    <maven.main.skip>true</maven.main.skip>
    <maven.test.skip>true</maven.test.skip>
    <!--url.nexus>http://localhost:8081</url.nexus-->
	<!--url.nexus get from settings.xml-->
    <node.repository>${url.nexus}/repository/node-public/</node.repository>
    <npm.repository>${url.nexus}/repository/npm-public/</npm.repository>
    <npm.registry>${npm.repository}npm/-/</npm.registry>
    <docker.repository>localhost:5000</docker.repository>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>dist</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.6</version>

        <configuration>
          <nodeVersion>v13.8.0</nodeVersion>
          <!-- npmVersion is optional, version taked by node-->
          <npmVersion>6.14.1</npmVersion>
          <!--workingDirectory>node</workingDirectory-->
          <!-- node executable and npm gets installed under target/ -->
          <!--installDirectory>target</installDirectory-->
          <nodeDownloadRoot>${node.repository}</nodeDownloadRoot>
          <npmDownloadRoot>${npm.registry}</npmDownloadRoot>
          <npmRegistryURL>${npm.repository}</npmRegistryURL>
          <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
        </configuration>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
          <execution>
            <id>npm</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <arguments>install --nodedir=node --no-optional</arguments>
            </configuration>
          </execution>
          <execution>
            <id>build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <environmentVariables>
                <NODE_OPTIONS>--max-old-space-size=4096</NODE_OPTIONS>
              </environmentVariables>
              <arguments>run build-dev</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <webResources></webResources>
          <webResources>
            <resource>
              <directory>dist</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.21.0</version>
      </plugin>

      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.4.4</version>
        <configuration>
          <pullNewerImage>false</pullNewerImage>
          <repository>${docker.repository}launcher_webapp</repository>
          <tag>${environment}</tag>
          <buildArgs>
            <DOCKER_REGISTRY>${docker.repository}</DOCKER_REGISTRY>
          </buildArgs>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
